
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
; NAME:
;       SelectData
;
; PURPOSE:
;
;       extract a subset of selected data from a MODIS image, 
;		represented by the structure SatStruct.
;		The extracted data is a square centered on a line/elem number of size subsetsize.
;
;
; CATEGORY:
; 
;       I/O
;
; CALLING SEQUENCE:
;
;       SelectData,filename,SatStruct,line,elem,subsetsize,SatData
;
; INPUTS:
;			filename:		input file name (string)
;			SatStruct:		structure describing the MODIS image
;			line:			line number for central location of extraction
;			elem:			element number for central location of extraction
;			subsetsize:		side size of the extracted square
;			(the number of pixels extracted is subsetsize x subsetsize)
;			
; OUTPUTS:
;			SatData:		extracted data set
;			
; KEYWORD PARAMETERS:
;					none
;
; COMMENTS:
;			The list of variables extracted is fixed.
;			Needs routines:
;				read_hdf_data
;				ExtractSubset
; REFERENCES:
;
; EXAMPLE:
;
; MODIFICATION HISTORY:
;
;       Written by: F. MELIN, 02/2001, JRC/IES/GEM.
;			
;
;------------------------------------------------------------------------------

PRO SelectData,filename,SatStruct,line,elem,subsetsize,SatData,option

hbad = -9999.
lbad =-1L
!QUIET=1


; definition of the size of the subset. The extracted array
; from the satellite image will be a square of 'subsetsize x subsetsize',
; rearranged in a 1-D array, one line after the other in the order
; of the track (southward).

n_side = FIX ( (subsetsize-1)/2 + 0.1)
n_square = subsetsize * subsetsize


; Definition of the structure bearing the MODIS data subset.

SatData = { Name:' ', $
            Source:' ', $
            Level:' ', $
            Type:' ', $
            Software:' ', $
            OrbitNumber:0L, $
            StartYear:-1, $
            EndYear:-1, $
            StartDay:-1, $
            EndDay:-1, $
            StartMillisec:0L, $
            EndMillisec:0L, $
            StartTime:hbad, $
            EndTime:hbad, $                
            NumberLine:-1, $
            NumberPixel:-1, $
            StartPixel:-1, $
            Subsampling:-1, $
            Line:-1, $
            Elem:-1, $
            SubsetSize:-1, $
            Latitude:hbad, $
            Longitude:hbad   }
                 
data = { $
         AOT_412:hbad, AOT_443:hbad, AOT_469:hbad, AOT_488:hbad, AOT_531:hbad, AOT_547:hbad, AOT_555:hbad, AOT_645:hbad, AOT_667:hbad, AOT_678:hbad, AOT_748:hbad, AOT_859:hbad, AOT_869:hbad, $
         angstrom_531:hbad, $
         aer_model_min: hbad, aer_model_max: hbad, aer_model_ratio: hbad, $
         Rrs_412:hbad, Rrs_443:hbad, Rrs_469:hbad, Rrs_488:hbad, Rrs_531:hbad, Rrs_547:hbad, Rrs_555:hbad, Rrs_645:hbad, Rrs_667:hbad, Rrs_678:hbad, Rrs_748:hbad, Rrs_859:hbad, Rrs_869:hbad, $
         Kd_490:hbad,  $
         chla:hbad, $
         adg_443_qaa:hbad, $ 
         aph_443_qaa:hbad, $
         bbp_547_qaa:hbad,  $
         flag:-1L, $
         SunZenith: hbad, SunAzimuth:hbad, $
         SatZenith: hbad, SatAzimuth:hbad, $
         RelAzimuth: hbad, $
         ozone: hbad, $
         zwind: hbad, $
         mwind: hbad, $
         water_vapor: hbad, $
         pressure: hbad, $ 
         humidity: hbad, $
         Latitude:hbad, Longitude:hbad }

BadData = data

data = REPLICATE (data,subsetsize*subsetsize)

SatData =  CREATE_STRUCT (SatData,"Data",data)

; Update the Header for the SatData structure.

SatData.Name          = SatStruct.Name
SatData.Level         = SatStruct.Level
SatData.Type          = SatStruct.Type
SatData.OrbitNumber   = SatStruct.OrbitNumber
SatData.StartYear     = SatStruct.StartYear
SatData.EndYear       = SatStruct.EndYear
SatData.StartDay      = SatStruct.StartJDay
SatData.EndDay        = SatStruct.EndJDay
; SatData.StartMillisec = SatStruct.StartMillisec
; SatData.EndMillisec   = SatStruct.EndMillisec
SatData.StartTime     = SatStruct.StartTime
SatData.EndTime       = SatStruct.EndTime
SatData.NumberLine    = SatStruct.NumberLine
SatData.NumberPixel   = SatStruct.NumberPixel
SatData.StartPixel    = 1 ; SatStruct.StartPixel
SatData.Subsampling   = 1 ; SatStruct.Subsampling
          
SatData.Software = SatStruct.Software
   
SatData.Line          = line
SatData.Elem          = elem        
SatData.SubsetSize    = subsetsize

; finds content of the file

fid = H5F_OPEN(filename)

H5_LIST,filename,OUTPUT=res
vlist = REFORM(res[1,*])

H5F_CLOSE, fid
     
; Extract subset of file.

; AOT
; DFNT_INT16
slope_tau = 0.0001
offset_tau = 0.
bad_tau = 0

; angstrom_510
; DFNT_INT16
slope_angstrom_531=0.0002
offset_angstrom_531=0.
bad_angstrom_531 = -10000 ; -32767 

bad_aer_model = 0

; eps_78
; DFNT_UINT8
slope_eps_78 = 0.01
offset_eps_78 = 0.
bad_eps_78 = 0

; K_490
; DFNT_INT16
slope_k_490 = 0.0002
oofset_k_490 = 0.
bad_k_490 = 0

; Chl a, OC4v4, GSM01
; DFNT_FLOAT32
slope_chla = 1.
offset_chla = 0.
bad_chla = 0. ; -1. 

; TSM, Clark
; DFNT_FLOAT32
slope_tsm = 1.
offset_tsm = 0.
bad_tsm = 0. ; -1.0

; a
; DFNT_INT16
slope_a =0.0001 
offset_a=2.5
bad_a = -25500 ; -25221

; aph - GSM01, Carder
; DFNT_INT16
slope_aph =0.0001 
offset_aph=2.5
bad_aph = -25000 ; -25221

; adg - GSM01
; DFNT_INT16
slope_adg = 0.0001
offset_adg = 2.5
bad_adg = -25000 ; -32767

; bbp - GSM01, Carder
; DFNT_INT16
slope_bbp = 5.e-6
offset_bbp = 0.16
bad_bbp = -32000 ; -32000 or -32767

; PAR
; DFNT_INT16
slope_par = 0.002
offset_par = 65.5
bad_par= -32750

bad_ozone = -9999.
bad_pressure = -9999.
bad_zwind = -9999.
bad_mwind = -9999.
bad_humidity = -9999.
bad_water_vapor = -9999.

bad_sena = -32767
bad_senz = -32767
bad_sola = -32767
bad_solz = -32767

bad_Lt = 0
bad_Lr = 0
bad_nLw = -9999.
bad_Lw = -9999.
bad_t_sen = 0
bad_t_sol = 0
bad_tg_sen = 0
bad_tg_sol = 0
bad_t_o2 = 0
bad_t_h2o = 0

bad_TLg = 0
bad_tLf = 0
bad_brdf = 0
bad_polcor = 0

subset=fltarr(n_square) & subset[*]=hbad

;###########################################################################################################
; AOT

; AOT_412
             name = "taua_412"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_412 = float(subset[i]) * header.slope + header.intercept

; AOT_443
             name = "taua_443"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_443 = float(subset[i]) * header.slope + header.intercept

; AOT_469
             name = "taua_469"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_469 = float(subset[i]) * header.slope + header.intercept

; AOT_488
             name = "taua_488"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_488 = float(subset[i]) * header.slope + header.intercept

; AOT_531
             name = "taua_531"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_531 = float(subset[i]) * header.slope + header.intercept

; AOT_547
             name = "taua_547"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_547 = float(subset[i]) * header.slope + header.intercept

; AOT_555
             name = "taua_555"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_555 = float(subset[i]) * header.slope + header.intercept

; AOT_645
             name = "taua_645"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_645 = float(subset[i]) * header.slope + header.intercept

; AOT_667
             name = "taua_667"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_667 = float(subset[i]) * header.slope + header.intercept

; AOT_678
             name = "taua_678"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_678 = float(subset[i]) * header.slope + header.intercept

; AOT_748
             name = "taua_748"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_748 = float(subset[i]) * header.slope + header.intercept

; AOT_859
             name = "taua_859"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_859 = float(subset[i]) * header.slope + header.intercept

; AOT_869
             name = "aot_869"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].AOT_869 = float(subset[i]) * header.slope + header.intercept

;###########################################################################################################             

; angstrom_531
             name = "angstrom_531"
             name = "angstrom"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].angstrom_531 = float(subset[i]) * header.slope + header.intercept

; aer_model_min
             name = "aer_model_min"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GE bad_aer_model ) then SatData.Data[i].aer_model_min = float(subset[i]) * header.slope + header.intercept
; aer_model_max
             name = "aer_model_max"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GE bad_aer_model ) then SatData.Data[i].aer_model_max = float(subset[i]) * header.slope + header.intercept
; aer_model_ratio
             name = "aer_model_ratio"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].aer_model_ratio = float(subset[i]) * header.slope + header.intercept

;###########################################################################################################
; Rrs

; Rrs_412
             name = "Rrs_412"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag       
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_412 = float(subset[i]) * header.slope + header.intercept

; Rrs_443
             name = "Rrs_443"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_443 = float(subset[i]) * header.slope + header.intercept

; Rrs_469
             name = "Rrs_469"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_469 = float(subset[i]) * header.slope + header.intercept

             
; Rrs_488
             name = "Rrs_488"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_488 = float(subset[i]) * header.slope + header.intercept

             
; Rrs_531
             name = "Rrs_531"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_531 = float(subset[i]) * header.slope + header.intercept
             
; Rrs_547
             name = "Rrs_547"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_547 = float(subset[i]) * header.slope + header.intercept

; Rrs_555
             name = "Rrs_555"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_555 = float(subset[i]) * header.slope + header.intercept

; Rrs_645
             name = "Rrs_645"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_645 = float(subset[i]) * header.slope + header.intercept

; Rrs_667
             name = "Rrs_667"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_667 = float(subset[i]) * header.slope + header.intercept

; Rrs_678
             name = "Rrs_678"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_678 = float(subset[i]) * header.slope + header.intercept
   
; Rrs_748
             name = "Rrs_748"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_748 = float(subset[i]) * header.slope + header.intercept

; Rrs_859
             name = "Rrs_859"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_859 = float(subset[i]) * header.slope + header.intercept

; Rrs_869
             name = "Rrs_869"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Rrs_869 = float(subset[i]) * header.slope + header.intercept
                       
;###########################################################################################################
; flag
             name = "l2_flags"
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             SatData.Data(*).flag = subset

;###########################################################################################################

; K_490
             name = "Kd_490"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].Kd_490 = float(subset[i]) * header.slope + header.intercept

; chlor_a
             name = "chlor_a" ; "chl_oc3|"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].chla = float(subset[i]) * header.slope + header.intercept

; aph, qaa
             name = "aph_443_qaa"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].aph_443_qaa = float(subset[i]) * header.slope + header.intercept

; adg, qaa
             name = "adg_443_qaa"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].adg_443_qaa = float(subset[i]) * header.slope + header.intercept

; bbp, qaa
             name = "bbp_547_qaa"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].bbp_547_qaa = float(subset[i]) * header.slope + header.intercept 


;###########################################################################################################

; ozone
             name = "ozone"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].ozone = float(subset[i]) * header.slope*1000. + header.intercept 

; zwind
             name = "zwind"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].zwind = float(subset[i]) * header.slope + header.intercept 

; mwind
             name = "mwind"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].mwind = float(subset[i]) * header.slope + header.intercept 

; water_vapor
             name = "water_vapor"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].water_vapor = float(subset[i]) * header.slope + header.intercept 

; pressure
             name = "pressure"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].pressure = float(subset[i]) * header.slope + header.intercept 

; humidity
             name = "humidity"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].humidity = float(subset[i]) * header.slope + header.intercept 


;###########################################################################################################

; sena
             name = "sena"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].SatAzimuth = float(subset[i]) * header.slope + header.intercept 

; senz
             name = "senz"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].SatZenith = float(subset[i]) * header.slope + header.intercept 

; sola
             name = "sola"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].SunAzimuth = float(subset[i]) * header.slope + header.intercept 

; solz
             name = "solz"
             subset=fltarr(n_square) & subset(*)=hbad
             ExtractSubset,filename,name,vlist,n_side,line,elem,subset,header,iflag
             if ( iflag GE 0 ) then for i=0,n_square-1 do $
                if ( subset[i] GT header.badvalue ) then SatData.Data[i].SunZenith = float(subset[i]) * header.slope + header.intercept 

             for i=0,n_square-1 do $
                if ( SatData.Data[i].SatAzimuth GT hbad AND SatData.Data[i].SunAzimuth GT hbad ) then $
                     SatData.Data[i].RelAzimuth = SatData.Data[i].SatAzimuth - SatData.Data[i].SunAzimuth 


;###########################################################################################################

elem_off    = SatStruct.ExtractPixelOffset
elem_geo    = elem ; +elem_off

; Latitude

             subset1 = SatStruct.Latitude[elem_geo-n_side:elem_geo+n_side,line-n_side:line+n_side]
             nn = (1 + 2*n_side)^2
             subset = REFORM(subset1,nn)
             FOR i=0,n_square-1 DO SatData.Data[i].Latitude = FLOAT(subset[i]) 

; Longitude

             subset1 = SatStruct.Longitude[elem_geo-n_side:elem_geo+n_side,line-n_side:line+n_side]
             nn = (1 + 2*n_side)^2
             subset = REFORM(subset1,nn)
             FOR i=0,n_square-1 DO SatData.Data[i].Longitude = FLOAT(subset[i])

!QUIET=0
END
; End of routine
