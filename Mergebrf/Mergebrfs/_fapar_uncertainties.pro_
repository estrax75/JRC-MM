;====================================================================================
;
; Main program
;
PRO FAPAR,sensor,ttasun,ttaview,phisun,phiview,$
   BRF_ToA_BLUE,BRF_ToA_RED,BRF_ToA_NIR,$
   D_BRF_ToA_BLUE,D_BRF_ToA_RED,D_BRF_ToA_NIR, $
   rhoRED, rhoNIR, D_rhoRED, D_rhoNIR, $
   D_rhotildeBLUE, D_rhotildeRED, D_rhotildeNIR, VI, D_VI, toc=TOC
;
;
; compute the fapar (=VI) and the associated uncertaintied (=D_VI) as function as the bands uncertainties
; D_BRF_ToA_BLUE,D_BRF_ToA_RED,D_BRF_ToA_NIR expressed in sigma !
; 
; 2014, NG  
;  
; The inputs are 
; sensor = nickname of instrument 
; sun,ttaview,phisun,phiview = the angular value of sun zenith, view zenith, 
; sun azimuth and view azimuth in degrees
; BRF_ToA_BLUE,BRF_ToA_RED,BRF_ToA_NIR = the actual value of BRF TOA in blue, red and near-infrared 
;
; 2007, NG  
;
;Convert angular values to radians

;stop

ttasun  *= !dtor
ttaview *= !dtor
phisun  *= !dtor
phiview *= !dtor
;stop
CASE sensor OF 
  'SEA' : BEGIN
         print,'Coefficients for seaWiFS ' 
   	; As in ATBD FAPAR SeaWifs (Version 2.0 - January 22,2002)
   	G0coeffs=[0.25130709,0.30589629,-0.0048298022,-0.32136740,0.31415914,-0.01074418]
   	G1coeffs=[-9.8725,-0.027458,2.9144,0.059376,10.904,0.,0.,0.,0.,0.,1.0]
   	G2coeffs=[-0.66956,-0.16930,-0.071256,-0.090485,-0.81353,-0.035440,-1.3438,-0.41673,-0.45123,-0.99648,0.]
	   ;k,Theta,rhoc
   	RahmanCoeffs_BLUE=[0.56184,-0.04125,0.23265]
   	RahmanCoeffs_RED= [0.70535,0.03576,-0.44444]
   	RahmanCoeffs_NIR= [0.86644,-0.00102,0.63149]
   END  
   'MER' : BEGIN
   	print,'Coefficients for MERIS ' 
	;  
	; 2011 VERSION 
   	;
	;Meris, as coded in BEAM
	;
	;
   	G0coeffs=[0.255,0.306,-0.0045,-0.32,0.32,-0.005] 
   	G1coeffs=[-9.2615,-0.029011,3.2545,0.055845,9.8268,0.,0.,0.,0.,0.,1.0]
   	G2coeffs=[-0.47131,-0.21018,-0.045159,0.076505,-0.80707,-0.048362,-1.2471,-0.54507,-0.47602,-1.1027,0.]
   	;k,Theta,rhoc
	;
   	RahmanCoeffs_BLUE=[0.56192,-0.04203,0.24012]
   	RahmanCoeffs_RED =[0.70879,0.037,-0.46273] 
   	RahmanCoeffs_NIR =[0.86523,-0.00123,0.63841]
    END
    'MOD' : BEGIN
         print,'Coefficients for MODIS ' 
         ;Modis 
         G0coeffs=[0.26130709,0.33489629,-0.0038298022,-0.32136740,0.31415914,-0.010744180] 
         G1coeffs=[-13.860,-0.018273,1.5824,0.081450,17.092,0.,0.,0.,0.,0.,1.0]
         G2coeffs=[-0.036557,-3.5399,8.3076,0.18702,-13.294,0.77034,-4.9048,-2.3630,-2.6733,-37.297,0.]
   
         ;k,Theta,rhoc
         RahmanCoeffs_BLUE=[0.56177,-0.03204,0.13704]
         RahmanCoeffs_RED =[0.70116,0.03376,-0.39924]
         RahmanCoeffs_NIR =[0.86830,-0.00081,0.63537]
     END	    
    'OLCI' : BEGIN
   	print,'Coefficients for OLCI ' 
   	;OLCI 
   	G0coeffs=[0.254845,0.28550,-0.00440000,-0.322000,0.321000,-0.005079] 
   	G1coeffs=[-9.1299,-0.028791,3.2,0.054,9.851,0.,0.,0.,0.,0.,1.0]
   	G2coeffs=[0.0082617,1.1027,0.64661,0.029443,-0.65340,0.19878,-0.95736,0.77296,0.054908,-1.6565,0.]
	;
	;     0.64295     1.02238    -0.09158
	;    -0.35287     0.66978     0.03698
	;k,Theta,rhoc
	RahmanCoeffs_BLUE=[0.51669,-0.04434,0.30402]
	RahmanCoeffs_RED =[0.66361,0.03840,-0.39471]
	RahmanCoeffs_NIR =[0.86633,-0.00705,0.66537]
	;
      END
    'AVHRR16' : BEGIN
	   print,'Coefficients for AVHRR 16 ' 
	   ;     0.33903     0.46809   -0.011618    -0.52565     0.30517    -0.16253
	   ; G0coeffs=[0.28020,0.46626,-0.020523,-0.45534,0.32749,-0.10280]   
	   ; G0coeffs=[0.33903,0.46809,-0.011618,-0.52565,0.30517,-0.16253] 
	  ; G0coeffs=[0.25405,0.32031,0.0037285,-0.28734,0.27214,-0.015730]

		G0coeffs=[0.26938,0.35195,0.0039122,-0.28712,0.26766,-0.011124]

	  ;G0coeffs=[1.7355,2.1163,0.013882,-3.1255,0.024832,-9.3987]
	   ;k,Theta,rhoc
	; 
	; facosi gives  xonst_lambda, k_lambda, xb_lambda 
	;
	;
	; 0.53801     0.95059    -0.07527 with 100
	; 0.61133     0.97763    -0.06397 with 1?0
	; 

	   RahmanCoeffs_RED =[0.97763,-0.06397,0.61133]
	   RahmanCoeffs_NIR =[0.84211,-0.02665,0.73745]

;
; with ?00 files FACOSI FORMAT RHO, K, THETA
; 16: NIR = 0.73745     0.84211    -0.02665
; 16: RED = 0.52163     0.92738    -0.02594
;0.53801     0.95059    -0.07527
; 14: NIR =
; 14: RED =
;
; 11: NIR = 0.67752     0.83087    -0.03473
; 11: RED = 0.53117     0.92543    -0.02638
;
;  9: NIR = 0.67683     0.83018    -0.03486
;  9: RED = 0.53140     0.92528    -0.02639
; 
;  7: NIR = 0.67499     0.83009    -0.03496
;  7: RED = 0.52832     0.92577    -0.02636
;
	END
     'AVHRR14' : BEGIN
	   print,'Coefficients for AVHRR 14 ' 
; 	  G0coeffs=[0.88757,1.1806,0.018104,-0.93576,0.13829,-0.66407]
;		0.25405,0.32031,0.0037285,-0.28734,0.27214,-0.015730]
;	0.509010     0.924580   -0.0684300
;	0.738140     0.849420   -0.0545000
; only veg
;	 		0.50901     0.92458    -0.06843
;			0.74984     0.84273    -0.02358
	  RahmanCoeffs_RED =[0.924580,-0.06843,0.509010]
	  RahmanCoeffs_NIR =[0.84273,-0.02358,0.74984]
    END
    endcase  
;stop
;For each band, 'rectification' value from Rahman
;window, 0, xsize=720, ysize=360, title='ttasun '+SENSOR
;tv, reverse(congrid(ttasun, 720,360),2)

;stop
;
; 
;
F_red=F(ttasun,ttaview,phisun,phiview,RahmanCoeffs_RED[0],RahmanCoeffs_RED[1],RahmanCoeffs_RED[2])
F_nir=F(ttasun,ttaview,phisun,phiview,RahmanCoeffs_NIR[0],RahmanCoeffs_NIR[1],RahmanCoeffs_NIR[2])
IF NOT(KEYWORD_set(toc)) THEN F_blue=F(ttasun,ttaview,phisun,phiview,RahmanCoeffs_BLUE[0],RahmanCoeffs_BLUE[1],RahmanCoeffs_BLUE[2])
;
;
; Estimate 'rectified' channels and associated Deltas
; abs() is omitted as derivatives are 1/F() which is always positive.
; 
; eq. 15 
rhotildeRED=abs(BRF_ToA_RED/F_red)
rhotildeNIR=abs(BRF_ToA_NIR/F_nir)
;
;
; 
;idx_fine=where( (brf_toa_red-rhotildered) ge 0.0)

;res1=histogram(brf_toa_red(idx_fine)-rhotildered(idx_fine), min=min(brf_toa_red(idx_fine)-rhotildered(idx_fine)),max=max(brf_toa_red(idx_fine)-rhotildered(idx_fine)),bin=0.01)
;res=histogram(rhotildered, min=min(rhotildered),max=max(rhotildered),bin=0.01)
;xpdf=fltarr(N_elements(res))
;xpdf1=fltarr(N_elements(res1))
;for kl=0, N_elements(res)-1 do xpdf(kl)=min(rhotildered)+kl*0.01
;for kl=0, N_elements(res1)-1 do xpdf1(kl)=min(brf_toa_red(idx_fine)-rhotildered(idx_fine))+kl*0.01	
;
;plot, xpdf1, 100.0*res1/total(res1), psym=10, xr=[min(brf_toa_red(idx_fine)-rhotildered(idx_fine)),max(brf_toa_red(idx_fine)-rhotildered(idx_fine))],$
; yr=[0.,100], xtitle='brf_toa_red-RHo Tidle RED',ytitle='Frequency (%)', charsize=1.5
;oplot, xpdf1, 100.0*res1/total(res1), psym=10, col=250
;
;stop
;window,/free
;
;res1=histogram(brf_toa_nir-rhotildenir, min=min(brf_toa_nir-rhotildenir),max=max(0.20),bin=0.01)
;res=histogram(rhotildenir, min=min(rhotildenir),max=max(rhotildenir),bin=0.01)
;xpdf=fltarr(N_elements(res))
;xpdf1=fltarr(N_elements(res1))
;for kl=0, N_elements(res)-1 do xpdf(kl)=min(rhotildenir)+kl*0.01
;for kl=0, N_elements(res1)-1 do xpdf1(kl)=min(brf_toa_nir-rhotildenir)+kl*0.01	
;
;plot, xpdf1, 100.0*res1/total(res1), psym=10, xr=[min(rhotildenir-rhotildenir),max(rhotildenir-rhotildenir)],$
 ;yr=[0.,100], xtitle='RHo Tidle NIR',ytitle='Frequency (%)', charsize=1.5
;oplot, xpdf1, 100.0*res1/total(res1), psym=10, col=250
;plot, brf_toa_nir, rhotildenir, xr=[0.,0.6], psym = 1 
;
;stop
;
IF NOT(KEYWORD_set(toc)) THEN rhotildeBLUE=BRF_ToA_BLUE/F_blue
;
; equation (25)
;
D_rhotildeRED  = sqrt(D_BRF_ToA_RED^2/F_red^2)
D_rhotildeNIR  = sqrt(D_BRF_ToA_NIR^2/F_nir^2)

;res1=histogram(d_brf_toa_red, min=min(d_brf_toa_red),max=max(d_brf_toa_red),bin=0.001)
;res=histogram(d_rhotildered, min=min(d_rhotildered),max=max(d_rhotildered),bin=0.001)
;xpdf=fltarr(N_elements(res))
;xpdf1=fltarr(N_elements(res1))
;for kl=0, N_elements(res)-1 do xpdf(kl)=min(d_rhotildered)+kl*0.001
;for kl=0, N_elements(res1)-1 do xpdf1(kl)=min(d_brf_toa_red)+kl*0.001	
;
;plot, xpdf, 100.0*res/total(res), psym=10, xr=[min(d_rhotildered),max(d_rhotildered)],$
; yr=[0.,20], xtitle='Sigma RHo Tidle RED',ytitle='Frequency (%)', charsize=1.5
; oplot, xpdf1, 100.0*res1/total(res1), psym=10, col=250
;
;res1=histogram(d_brf_toa_nir, min=min(d_brf_toa_nir),max=max(d_brf_toa_nir),bin=0.001)
;res=histogram(d_rhotildenir, min=min(d_rhotildenir),max=max(d_rhotildenir),bin=0.001)
;xpdf=fltarr(N_elements(res))
;xpdf1=fltarr(N_elements(res1))
;for kl=0, N_elements(res)-1 do xpdf(kl)=min(d_rhotildenir)+kl*0.001
;for kl=0, N_elements(res1)-1 do xpdf1(kl)=min(d_brf_toa_nir)+kl*0.001	
;
;plot, xpdf, 100.0*res/total(res), psym=10, xr=[min(d_rhotildenir),max(d_rhotildenir)],$
; yr=[0.,20], xtitle='Sigma RHo Tidle NIR',ytitle='Frequency (%)', charsize=1.5
;oplot, xpdf1, 100.0*res1/total(res1), psym=10, col=250

;
;stop
;
IF not(KEYWORD_set(toc)) THEN D_rhotildeBLUE = sqrt(D_BRF_ToA_BLUE^2/F_blue^2)

;Estimate 'corrected' channels and associated Deltas
;
IF NOT(KEYWORD_set(toc)) THEN BEGIN
	rhoRED=GN(G1coeffs,rhotildeBLUE,rhotildeRED)
	rhoNIR=GN(G2coeffs,rhotildeBLUE,rhotildeNIR)
;
; equation 19
;

	   D_rhoRED = sqrt(GN_DIFF_1st(G1coeffs,rhotildeBLUE,rhotildeRED)*$
           GN_DIFF_1st(G1coeffs,rhotildeBLUE,rhotildeRED)*D_rhotildeBLUE^2+$
           ;
           GN_DIFF_2nd(G1coeffs,rhotildeBLUE,rhotildeRED)*$
           GN_DIFF_2nd(G1coeffs,rhotildeBLUE,rhotildeRED)*D_rhotildeRED^2) ;+$
           ;
           ;2.*GN_DIFF_1st(G1coeffs,rhotildeBLUE,rhotildeRED)*$
           ;GN_DIFF_2nd(G1coeffs,rhotildeBLUE,rhotildeRED)*covblueredtilde --> 0

;print, 'rhoRED, D_rhoRED' 
;print, rhoRED, D_rhoRED

	D_rhoNIR = sqrt(GN_DIFF_1st(G2coeffs,rhotildeBLUE,rhotildeNIR)*$
             GN_DIFF_1st(G2coeffs,rhotildeBLUE,rhotildeNIR)*D_rhotildeBLUE^2+$
             ;
             GN_DIFF_2nd(G2coeffs,rhotildeBLUE,rhotildeNIR)*$
             GN_DIFF_2nd(G2coeffs,rhotildeBLUE,rhotildeNIR)*D_rhotildeNIR^2) ;+$
           ;
           ;2.*GN_DIFF_1st(G1coeffs,rhotildeBLUE,rhotildeRED)*$
           ;GN_DIFF_2nd(G1coeffs,rhotildeBLUE,rhotildeRED)*covblueredtilde --> 0
           
ENDIF else begin

rhoRED=rhotildeRED
rhoNIR=rhotildeNIR

endelse

;Estimate VI (FAPAR) and associated Delta
; eq. 13
;
VI   = G0(G0coeffs,rhoRED,rhoNIR)
;
; equation (16)
;
if KEYWORD_set(toc) THEN begin
;
; AVHRR
;
D_rhoRED=D_rhotildeRED
D_rhoNIR=D_rhotildeNIR

endif
;
;eq. 22
; 
D_VI  = sqrt(G0_DIFF_1st(G0coeffs,rhoRED,rhoNIR)*$
        G0_DIFF_1st(G0coeffs,rhoRED,rhoNIR)*D_rhoRED^2+	$
        ;
        G0_DIFF_2nd(G0coeffs,rhoRED,rhoNIR)*$
        G0_DIFF_2nd(G0coeffs,rhoRED,rhoNIR)*D_rhoNIR^2)
;
;window,0
;res1=histogram(d_vi, min=min(d_vi),max=max(d_vi),bin=0.001)
;xpdf1=fltarr(N_elements(res1))

;for kl=0, N_elements(res1)-1 do xpdf1(kl)=min(d_vi)+kl*0.001	
;
;plot, xpdf1, 100.0*res1/total(res1), psym=10, xr=[min(d_vi),max(d_vi)],$
; yr=[0.,20], xtitle='Sigma FAPAR',ytitle='Frequency (%)', charsize=1.5
;  
;
;print,'look the plot ...'
;stop
;window,2
;plot, d_vi, psym = 1
;stop
;print,'FAPAR: ',VI
;print,'Standard Deviation: ',D_VI
;
;D_RHONIR=SQRT(D_RHONIR)
;D_RHOred=SQRT(D_RHORED)

END

